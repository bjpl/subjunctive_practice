"""Initial migration

Revision ID: dbd337efd07e
Revises: 
Create Date: 2025-10-03 22:07:31.217505

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dbd337efd07e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('icon_url', sa.String(length=500), nullable=True),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('criteria', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_achievements_id'), 'achievements', ['id'], unique=False)
    op.create_table('scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('theme', sa.String(length=50), nullable=False),
    sa.Column('context', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('recommended_level', sa.String(length=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scenarios_id'), 'scenarios', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('STUDENT', 'TEACHER', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('verbs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('infinitive', sa.String(length=50), nullable=False),
    sa.Column('english_translation', sa.String(length=100), nullable=False),
    sa.Column('verb_type', sa.Enum('REGULAR', 'IRREGULAR', 'STEM_CHANGING', 'REFLEXIVE', name='verbtype'), nullable=False),
    sa.Column('present_subjunctive', sa.JSON(), nullable=False),
    sa.Column('imperfect_subjunctive_ra', sa.JSON(), nullable=True),
    sa.Column('imperfect_subjunctive_se', sa.JSON(), nullable=True),
    sa.Column('frequency_rank', sa.Integer(), nullable=True),
    sa.Column('is_irregular', sa.Boolean(), nullable=False),
    sa.Column('irregularity_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verbs_id'), 'verbs', ['id'], unique=False)
    op.create_index(op.f('ix_verbs_infinitive'), 'verbs', ['infinitive'], unique=True)
    op.create_index(op.f('ix_verbs_verb_type'), 'verbs', ['verb_type'], unique=False)
    op.create_table('exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('verb_id', sa.Integer(), nullable=False),
    sa.Column('exercise_type', sa.Enum('FILL_BLANK', 'MULTIPLE_CHOICE', 'CONJUGATION', 'TRANSLATION', 'TRIGGER_IDENTIFICATION', name='exercisetype'), nullable=False),
    sa.Column('tense', sa.Enum('PRESENT', 'IMPERFECT', 'PRESENT_PERFECT', 'PLUPERFECT', name='subjunctivetense'), nullable=False),
    sa.Column('difficulty', sa.Enum('EASY', 'MEDIUM', 'HARD', 'EXPERT', name='difficultylevel'), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('correct_answer', sa.String(length=200), nullable=False),
    sa.Column('alternative_answers', sa.JSON(), nullable=True),
    sa.Column('distractors', sa.JSON(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('trigger_phrase', sa.String(length=100), nullable=True),
    sa.Column('hint', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('success_rate', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['verb_id'], ['verbs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercises_difficulty'), 'exercises', ['difficulty'], unique=False)
    op.create_index(op.f('ix_exercises_exercise_type'), 'exercises', ['exercise_type'], unique=False)
    op.create_index(op.f('ix_exercises_id'), 'exercises', ['id'], unique=False)
    op.create_index(op.f('ix_exercises_tense'), 'exercises', ['tense'], unique=False)
    op.create_index(op.f('ix_exercises_verb_id'), 'exercises', ['verb_id'], unique=False)
    op.create_table('review_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('verb_id', sa.Integer(), nullable=False),
    sa.Column('easiness_factor', sa.Float(), nullable=False),
    sa.Column('interval_days', sa.Integer(), nullable=False),
    sa.Column('repetitions', sa.Integer(), nullable=False),
    sa.Column('next_review_date', sa.DateTime(), nullable=False),
    sa.Column('last_reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('review_count', sa.Integer(), nullable=False),
    sa.Column('total_correct', sa.Integer(), nullable=False),
    sa.Column('total_attempts', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['verb_id'], ['verbs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_review_schedules_id'), 'review_schedules', ['id'], unique=False)
    op.create_index(op.f('ix_review_schedules_user_id'), 'review_schedules', ['user_id'], unique=False)
    op.create_index(op.f('ix_review_schedules_verb_id'), 'review_schedules', ['verb_id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('total_exercises', sa.Integer(), nullable=False),
    sa.Column('correct_answers', sa.Integer(), nullable=False),
    sa.Column('score_percentage', sa.Float(), nullable=True),
    sa.Column('session_type', sa.String(length=50), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    op.create_table('user_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(), nullable=False),
    sa.Column('progress_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_achievements_achievement_id'), 'user_achievements', ['achievement_id'], unique=False)
    op.create_index(op.f('ix_user_achievements_id'), 'user_achievements', ['id'], unique=False)
    op.create_index(op.f('ix_user_achievements_user_id'), 'user_achievements', ['user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('daily_goal', sa.Integer(), nullable=False),
    sa.Column('session_length', sa.Integer(), nullable=False),
    sa.Column('difficulty_preference', sa.Integer(), nullable=False),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('reminder_enabled', sa.Boolean(), nullable=False),
    sa.Column('reminder_time', sa.String(length=5), nullable=True),
    sa.Column('show_explanations', sa.Boolean(), nullable=False),
    sa.Column('auto_advance', sa.Boolean(), nullable=False),
    sa.Column('audio_enabled', sa.Boolean(), nullable=False),
    sa.Column('enable_spaced_repetition', sa.Boolean(), nullable=False),
    sa.Column('review_frequency', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('current_level', sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', name='languagelevel'), nullable=False),
    sa.Column('target_level', sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', name='languagelevel'), nullable=True),
    sa.Column('native_language', sa.String(length=50), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=False),
    sa.Column('longest_streak', sa.Integer(), nullable=False),
    sa.Column('last_practice_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_table('user_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_sessions', sa.Integer(), nullable=False),
    sa.Column('total_exercises_completed', sa.Integer(), nullable=False),
    sa.Column('total_correct_answers', sa.Integer(), nullable=False),
    sa.Column('overall_accuracy', sa.Float(), nullable=False),
    sa.Column('total_study_time_minutes', sa.Integer(), nullable=False),
    sa.Column('average_session_duration', sa.Integer(), nullable=False),
    sa.Column('verbs_mastered', sa.Integer(), nullable=False),
    sa.Column('verbs_learning', sa.Integer(), nullable=False),
    sa.Column('weekly_exercises', sa.Integer(), nullable=False),
    sa.Column('weekly_accuracy', sa.Float(), nullable=False),
    sa.Column('total_achievements', sa.Integer(), nullable=False),
    sa.Column('total_points', sa.Integer(), nullable=False),
    sa.Column('last_calculated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_statistics_id'), 'user_statistics', ['id'], unique=False)
    op.create_index(op.f('ix_user_statistics_user_id'), 'user_statistics', ['user_id'], unique=True)
    op.create_table('attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_answer', sa.String(length=200), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('time_taken_seconds', sa.Integer(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=False),
    sa.Column('attempts_count', sa.Integer(), nullable=False),
    sa.Column('confidence_level', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attempts_exercise_id'), 'attempts', ['exercise_id'], unique=False)
    op.create_index(op.f('ix_attempts_id'), 'attempts', ['id'], unique=False)
    op.create_index(op.f('ix_attempts_session_id'), 'attempts', ['session_id'], unique=False)
    op.create_index(op.f('ix_attempts_user_id'), 'attempts', ['user_id'], unique=False)
    op.create_table('exercise_scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_scenarios_exercise_id'), 'exercise_scenarios', ['exercise_id'], unique=False)
    op.create_index(op.f('ix_exercise_scenarios_id'), 'exercise_scenarios', ['id'], unique=False)
    op.create_index(op.f('ix_exercise_scenarios_scenario_id'), 'exercise_scenarios', ['scenario_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_exercise_scenarios_scenario_id'), table_name='exercise_scenarios')
    op.drop_index(op.f('ix_exercise_scenarios_id'), table_name='exercise_scenarios')
    op.drop_index(op.f('ix_exercise_scenarios_exercise_id'), table_name='exercise_scenarios')
    op.drop_table('exercise_scenarios')
    op.drop_index(op.f('ix_attempts_user_id'), table_name='attempts')
    op.drop_index(op.f('ix_attempts_session_id'), table_name='attempts')
    op.drop_index(op.f('ix_attempts_id'), table_name='attempts')
    op.drop_index(op.f('ix_attempts_exercise_id'), table_name='attempts')
    op.drop_table('attempts')
    op.drop_index(op.f('ix_user_statistics_user_id'), table_name='user_statistics')
    op.drop_index(op.f('ix_user_statistics_id'), table_name='user_statistics')
    op.drop_table('user_statistics')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_user_preferences_id'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_user_achievements_user_id'), table_name='user_achievements')
    op.drop_index(op.f('ix_user_achievements_id'), table_name='user_achievements')
    op.drop_index(op.f('ix_user_achievements_achievement_id'), table_name='user_achievements')
    op.drop_table('user_achievements')
    op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_review_schedules_verb_id'), table_name='review_schedules')
    op.drop_index(op.f('ix_review_schedules_user_id'), table_name='review_schedules')
    op.drop_index(op.f('ix_review_schedules_id'), table_name='review_schedules')
    op.drop_table('review_schedules')
    op.drop_index(op.f('ix_exercises_verb_id'), table_name='exercises')
    op.drop_index(op.f('ix_exercises_tense'), table_name='exercises')
    op.drop_index(op.f('ix_exercises_id'), table_name='exercises')
    op.drop_index(op.f('ix_exercises_exercise_type'), table_name='exercises')
    op.drop_index(op.f('ix_exercises_difficulty'), table_name='exercises')
    op.drop_table('exercises')
    op.drop_index(op.f('ix_verbs_verb_type'), table_name='verbs')
    op.drop_index(op.f('ix_verbs_infinitive'), table_name='verbs')
    op.drop_index(op.f('ix_verbs_id'), table_name='verbs')
    op.drop_table('verbs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_scenarios_id'), table_name='scenarios')
    op.drop_table('scenarios')
    op.drop_index(op.f('ix_achievements_id'), table_name='achievements')
    op.drop_table('achievements')
    # ### end Alembic commands ###
