# Production Environment Configuration Template
# Spanish Subjunctive Practice - Backend API
#
# SECURITY CRITICAL: This is a template file.
# DO NOT commit actual production values to version control.
# Set these values in your Railway dashboard or CI/CD secrets.

# ================================
# Application Settings
# ================================
ENVIRONMENT=production
DEBUG=false
VERSION=1.0.0
APP_NAME=Spanish Subjunctive Practice API
API_V1_PREFIX=/api/v1

# Server Configuration
HOST=0.0.0.0
PORT=8000
WORKERS=4

# ================================
# Database Configuration
# ================================
# Railway automatically provides DATABASE_URL when PostgreSQL is added
# Format: postgresql+asyncpg://user:password@host:port/database
#
# To add PostgreSQL to your Railway project:
# 1. Go to your Railway project dashboard
# 2. Click "New" -> "Database" -> "Add PostgreSQL"
# 3. Railway will automatically inject DATABASE_URL
#
# DATABASE_URL is set automatically by Railway
# Manual format (if needed): postgresql+asyncpg://user:password@host:port/dbname

# Database Pool Settings (optimized for Railway)
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600
DB_ECHO=false

# ================================
# Redis Configuration
# ================================
# Railway automatically provides REDIS_URL when Redis is added
# Format: redis://default:password@host:port
#
# To add Redis to your Railway project:
# 1. Go to your Railway project dashboard
# 2. Click "New" -> "Database" -> "Add Redis"
# 3. Railway will automatically inject REDIS_URL
#
# REDIS_URL is set automatically by Railway
# Manual format (if needed): redis://host:port/db

# Redis Cache Settings
CACHE_TTL=3600
CACHE_PREFIX=subjunctive:prod:

# ================================
# Security & Authentication
# ================================
# CRITICAL: Generate secure random strings for production
#
# Generate secure keys using one of these methods:
#
# Python:
#   python -c "import secrets; print(secrets.token_urlsafe(32))"
#
# OpenSSL:
#   openssl rand -base64 32
#
# Node.js:
#   node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"

JWT_SECRET_KEY=REPLACE_WITH_SECURE_RANDOM_STRING_32_CHARS_MIN
SESSION_SECRET_KEY=REPLACE_WITH_SECURE_RANDOM_STRING_32_CHARS_MIN

JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Session Configuration
SESSION_COOKIE_NAME=session_id
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=strict

# Password Hashing
PASSWORD_BCRYPT_ROUNDS=12

# ================================
# CORS Configuration
# ================================
# IMPORTANT: Update with your actual frontend domain(s)
# Multiple domains separated by commas
#
# Examples:
#   Single domain: https://subjunctive-practice.vercel.app
#   Multiple domains: https://subjunctive-practice.vercel.app,https://www.yourapp.com,https://app.yourapp.com
#
# For Vercel deployments, include both:
#   - Production domain: https://your-app.vercel.app
#   - Custom domain: https://www.yourapp.com

CORS_ORIGINS=https://your-frontend-domain.vercel.app
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_ALLOW_HEADERS=*

# ================================
# OpenAI Configuration
# ================================
# Get your API key from: https://platform.openai.com/api-keys
#
# SECURITY: Store this in Railway dashboard, not in code
# Set in Railway: Variables -> Raw Editor -> OPENAI_API_KEY=sk-...

OPENAI_API_KEY=REPLACE_WITH_YOUR_OPENAI_API_KEY
OPENAI_MODEL=gpt-4o-mini
OPENAI_MAX_TOKENS=1000
OPENAI_TEMPERATURE=0.7
OPENAI_TIMEOUT=30
OPENAI_MAX_RETRIES=3

# ================================
# Monitoring & Error Tracking
# ================================
# Sentry Error Tracking (Highly Recommended for Production)
# Get your DSN from: https://sentry.io/
#
# Setup Instructions:
# 1. Create account at https://sentry.io/
# 2. Create new project (select FastAPI/Python)
# 3. Copy the DSN from project settings
# 4. Set SENTRY_DSN in Railway dashboard
#
# Example DSN: https://examplePublicKey@o0.ingest.sentry.io/0

SENTRY_DSN=
SENTRY_ENVIRONMENT=production
SENTRY_TRACES_SAMPLE_RATE=0.1
SENTRY_PROFILES_SAMPLE_RATE=0.1

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=  # Empty in production (Railway handles log aggregation)

# ================================
# Rate Limiting
# ================================
# Protect your API from abuse
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# ================================
# Performance & Optimization
# ================================
# Gunicorn Worker Configuration
WORKER_CLASS=uvicorn.workers.UvicornWorker
WORKER_TIMEOUT=120
MAX_REQUESTS=1000
MAX_REQUESTS_JITTER=100

# ================================
# Feature Flags
# ================================
ENABLE_REGISTRATION=true
ENABLE_EMAIL_VERIFICATION=false
ENABLE_SOCIAL_LOGIN=false
ENABLE_ANALYTICS=true

# ================================
# Email Configuration (Optional)
# ================================
# Only needed if ENABLE_EMAIL_VERIFICATION=true
# For Gmail, use App Password: https://support.google.com/accounts/answer/185833

SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=noreply@yourapp.com
SMTP_FROM_NAME=Spanish Subjunctive Practice
SMTP_TLS=true

# ================================
# Background Tasks (Optional)
# ================================
# Celery configuration if using background tasks
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}

# ================================
# Build Information
# ================================
# These are automatically populated by Railway
# RAILWAY_DEPLOYMENT_ID - Unique deployment ID
# RAILWAY_GIT_COMMIT_SHA - Git commit hash
# RAILWAY_GIT_BRANCH - Git branch name
# RAILWAY_GIT_COMMIT_MESSAGE - Commit message
# RAILWAY_ENVIRONMENT_NAME - Environment name

# ================================
# Advanced Configuration
# ================================
# Skip database migrations on deployment
SKIP_MIGRATIONS=false

# Enable/disable specific features
ENABLE_API_DOCS=true
ENABLE_OPENAPI=true

# File Upload Limits
MAX_UPLOAD_SIZE=10485760  # 10MB in bytes
ALLOWED_UPLOAD_EXTENSIONS=.txt,.pdf,.doc,.docx

# ================================
# Production Deployment Checklist
# ================================
# Before deploying to production, ensure:
#
# [ ] All REPLACE_WITH_* values are updated with secure values
# [ ] JWT_SECRET_KEY and SESSION_SECRET_KEY are set to secure random strings
# [ ] OPENAI_API_KEY is configured in Railway dashboard
# [ ] CORS_ORIGINS is set to your actual frontend domain(s)
# [ ] DATABASE_URL is automatically set by Railway PostgreSQL
# [ ] REDIS_URL is automatically set by Railway Redis (if using cache)
# [ ] SENTRY_DSN is configured for error tracking
# [ ] SSL certificates are configured (Railway handles this automatically)
# [ ] Health check endpoint /health is accessible
# [ ] Database migrations have been tested
# [ ] All environment variables are set in Railway dashboard (not in code)
# [ ] .env files are in .gitignore (never commit secrets to git)
