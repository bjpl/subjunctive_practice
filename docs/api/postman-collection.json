{
  "info": {
    "name": "Spanish Subjunctive Practice API",
    "description": "Complete API collection for Spanish Subjunctive Practice application with TBLT methodology",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('access_token', jsonData.tokens.access_token);",
                  "    pm.environment.set('refresh_token', jsonData.tokens.refresh_token);",
                  "    pm.environment.set('user_id', jsonData.user.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"test_user\",\n  \"email\": \"test@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"first_name\": \"Test\",\n  \"last_name\": \"User\",\n  \"bio\": \"Learning Spanish subjunctive\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('access_token', jsonData.tokens.access_token);",
                  "    pm.environment.set('refresh_token', jsonData.tokens.refresh_token);",
                  "    pm.environment.set('user_id', jsonData.user.id);",
                  "    console.log('Logged in successfully');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"test_user\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            }
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('access_token', jsonData.access_token);",
                  "    pm.environment.set('refresh_token', jsonData.refresh_token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "refresh"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Spaced Repetition System",
      "item": [
        {
          "name": "Get Due Items",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/srs/due-items?limit=20&include_overdue=true&sort_by=due_date",
              "host": ["{{base_url}}"],
              "path": ["api", "srs", "due-items"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "include_overdue",
                  "value": "true"
                },
                {
                  "key": "sort_by",
                  "value": "due_date"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Submit Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quality\": 5,\n  \"response_time_ms\": 3500,\n  \"user_answer\": \"hable\",\n  \"expected_answer\": \"hable\",\n  \"session_id\": \"session_123\",\n  \"hints_used\": 0,\n  \"difficulty_perceived\": 3,\n  \"confidence_before\": 4,\n  \"confidence_after\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/srs/items/:item_id/review",
              "host": ["{{base_url}}"],
              "path": ["api", "srs", "items", ":item_id", "review"],
              "variable": [
                {
                  "key": "item_id",
                  "value": "550e8400-e29b-41d4-a716-446655440000"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Learning Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/srs/analytics/metrics?period=30d&include_predictions=true",
              "host": ["{{base_url}}"],
              "path": ["api", "srs", "analytics", "metrics"],
              "query": [
                {
                  "key": "period",
                  "value": "30d"
                },
                {
                  "key": "include_predictions",
                  "value": "true"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Optimize Schedule",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/srs/schedule/optimize?target_daily_reviews=20&optimize_for=retention",
              "host": ["{{base_url}}"],
              "path": ["api", "srs", "schedule", "optimize"],
              "query": [
                {
                  "key": "target_daily_reviews",
                  "value": "20"
                },
                {
                  "key": "optimize_for",
                  "value": "retention"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "AI-Powered Learning",
      "item": [
        {
          "name": "Generate Exercise",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"difficulty\": \"intermediate\",\n  \"tense\": \"present\",\n  \"topic\": \"travel\",\n  \"previous_mistakes\": [\"quiere que voy\", \"espero que ir√©\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/ai/exercise/generate",
              "host": ["{{base_url}}"],
              "path": ["api", "ai", "exercise", "generate"]
            }
          },
          "response": []
        },
        {
          "name": "Analyze Error",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"student_answer\": \"voy\",\n  \"correct_answer\": \"vaya\",\n  \"sentence\": \"Espero que t√∫ vay___ al concierto.\",\n  \"student_level\": \"intermediate\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/ai/error/analyze",
              "host": ["{{base_url}}"],
              "path": ["api", "ai", "error", "analyze"]
            }
          },
          "response": []
        },
        {
          "name": "Generate Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"difficulty\": \"intermediate\",\n  \"topic\": \"vida cotidiana\",\n  \"num_exchanges\": 6\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/ai/conversation/generate",
              "host": ["{{base_url}}"],
              "path": ["api", "ai", "conversation", "generate"]
            }
          },
          "response": []
        },
        {
          "name": "Get AI Capabilities",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/ai/capabilities",
              "host": ["{{base_url}}"],
              "path": ["api", "ai", "capabilities"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Health & Monitoring",
      "item": [
        {
          "name": "Basic Health Check",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "Comprehensive Health Check",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": ["{{base_url}}"],
              "path": ["api", "health"]
            }
          },
          "response": []
        },
        {
          "name": "AI Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/ai/health",
              "host": ["{{base_url}}"],
              "path": ["api", "ai", "health"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
