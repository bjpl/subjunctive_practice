name: Nightly Build

on:
  schedule:
    # Run every night at 2:00 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual trigger

env:
  PYTHON_VERSION: '3.11'

jobs:
  full-test-suite:
    name: Complete Test Suite
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_subjunctive_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install all dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run migrations
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_subjunctive_db
        run: |
          alembic upgrade head

      - name: Run complete test suite
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_subjunctive_db
          REDIS_URL: redis://localhost:6379/0
        run: |
          pytest --cov=backend \
                 --cov-report=html \
                 --cov-report=xml \
                 --cov-report=term \
                 --durations=20 \
                 -v

      - name: Upload full coverage report
        uses: actions/upload-artifact@v4
        with:
          name: nightly-coverage-report
          path: htmlcov/
          retention-days: 7

  performance-tests:
    name: Performance & Load Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_subjunctive_db
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install locust pytest-benchmark

      - name: Run performance tests
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_subjunctive_db
        run: |
          pytest tests/ -m "performance" -v --benchmark-only || true

  security-audit:
    name: Comprehensive Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install security tools
        run: |
          pip install bandit safety pip-audit

      - name: Run Bandit
        run: |
          bandit -r backend/ -f json -o bandit-report.json
          bandit -r backend/ -ll

      - name: Run Safety
        run: |
          safety check --json --output safety-report.json || true

      - name: Run pip-audit
        run: |
          pip-audit --desc || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  dependency-update-check:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Check for outdated packages
        run: |
          pip install pip-check
          pip list --outdated > outdated-packages.txt || true
          cat outdated-packages.txt

      - name: Upload outdated packages list
        uses: actions/upload-artifact@v4
        with:
          name: outdated-packages
          path: outdated-packages.txt

  notify-results:
    name: Notify Nightly Results
    runs-on: ubuntu-latest
    needs: [full-test-suite, performance-tests, security-audit]
    if: always()

    steps:
      - name: Generate summary
        run: |
          echo "## Nightly Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Full Test Suite: ${{ needs.full-test-suite.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Performance Tests: ${{ needs.performance-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Security Audit: ${{ needs.security-audit.result }}" >> $GITHUB_STEP_SUMMARY
