name: Frontend CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  test:
    name: Test Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run TypeScript type check
        working-directory: frontend
        run: npm run type-check

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint

      - name: Run Jest unit tests
        working-directory: frontend
        run: npm run test:coverage

      - name: Upload Jest coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./frontend/coverage/coverage-final.json
          flags: frontend
          name: frontend-${{ matrix.node-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-html-${{ matrix.node-version }}
          path: frontend/coverage/lcov-report/
          retention-days: 7

  e2e:
    name: E2E Tests with Playwright
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Set up environment variables
        run: |
          echo "NEXT_PUBLIC_API_URL=http://localhost:3000" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_ENVIRONMENT=test" >> $GITHUB_ENV

      - name: Run Playwright E2E tests
        working-directory: frontend
        run: npm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

      - name: Upload Playwright test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: frontend/test-results/
          retention-days: 7

  build:
    name: Build Next.js Application
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build Next.js application
        working-directory: frontend
        env:
          NEXT_PUBLIC_API_URL: https://api.example.com
          NEXT_PUBLIC_ENVIRONMENT: production
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: |
            frontend/.next/
            frontend/public/
          retention-days: 7

      - name: Analyze bundle size
        working-directory: frontend
        run: |
          du -sh .next/ || true
          find .next/static -type f -name "*.js" -exec du -h {} + | sort -rh | head -20 || true

  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run accessibility tests
        working-directory: frontend
        run: npm run test:a11y

      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: frontend/coverage/
          retention-days: 7

  lint-format:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Check code formatting with Prettier
        working-directory: frontend
        run: npx prettier --check "**/*.{ts,tsx,js,jsx,json,css,md}"

      - name: Run ESLint with auto-fix check
        working-directory: frontend
        run: npm run lint -- --max-warnings=0
